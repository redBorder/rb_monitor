#!/bin/bash
#

mkl_require good_cflags
mkl_require gitversion as GITVERSION
mkl_require atomics must pass

#mkl_mkvar_append CPPFLAGS CPPFLAGS "-DFORTIFY_SOURCE=2"
mkl_mkvar_append CPPFLAGS CPPFLAGS "-DNDEBUG"
mkl_mkvar_append CPPFLAGS CPPFLAGS "-std=gnu99"
mkl_mkvar_append CPPFLAGS CPPFLAGS "-D_GNU_SOURCE"
mkl_mkvar_append CPPFLAGS CPPFLAGS "-Wunused -Wcast-align -Wdisabled-optimization -Winit-self"
mkl_mkvar_append CPPFLAGS CPPFLAGS "-Wlogical-op -Wmissing-include-dirs -Wstrict-overflow=5"
mkl_mkvar_append CPPFLAGS CPPFLAGS "-Wundef -Wall -Wextra -Wshadow -Wsign-conversion"
mkl_mkvar_append CPPFLAGS CPPFLAGS "-Wswitch-default -Wmissing-declarations"
mkl_mkvar_append CPPFLAGS CPPFLAGS "-I. -Isrc/"


#mkl_mkvar_append CPPFLAGS CPPFLAGS "-ftrack-macro-expansion=2 -Wcast-qual "
#mkl_mkvar_append CPPFLAGS CPPFLAGS "-Wjump-misses-init" # New in gcc 4.5
#mkl_mkvar_append CPPFLAGS CPPFLAGS "-Wdouble-promotion" # New in gcc 4.6
#mkl_mkvar_append CPPFLAGS CPPFLAGS "-Wunused-local-typedefs" # New in gcc 4.7

mkl_toggle_option "Standard" WITH_ZOOKEEPER "--enable-zookeeper"   "Apache Zookeeper support" "n"
mkl_toggle_option "Standard" WITH_RBHTTP    "--enable-rbhttp"      "redBorder HTTP library to send monitors over POST messages" "n"
mkl_toggle_option "Debug" WITH_COVERAGE "--enable-coverage" "Coverage build" "n"

# Check for snmp library
# Arg1: Name
# Arg2: -l<> flags
# Arg3: fail / cont
function check_snmp {
    DISPLAY_NAME=$1
    SNMP_LDFLAG=$2
    ACTION=$3
    mkl_lib_check --static=$2 "$1" HAVE_NET_SNMP $3 CC "$2" \
       "#include <net-snmp/net-snmp-config.h>
       #include <net-snmp/net-snmp-includes.h>"
}

function checks {
    mkl_define_set "OS name" "osName" "`uname`"

    mkl_lib_check "librd" "" fail CC "-lrd -lpthread -lz -lrt"

    mkl_lib_check pthread HAVE_LIBPTHREAD fail CC "-lpthread" \
        "#include <pthread.h>
         void *f();void *f(){return pthread_mutex_init;}"

    mkl_lib_check json HAVE_JSON_C fail CC "-ljson-c" \
        "#include <json-c/json.h>"

    # Check that librdkafka is available, and allow to link it statically.
    mkl_meta_set "librdkafka" "desc" "librdkafka is available at http://github.com/edenhill/librdkafka."
    mkl_meta_set "librdkafka" "deb" "librdkafka-dev"
    mkl_lib_check --static=-lrdkafka "librdkafka" "" fail CC "-lrdkafka -lpthread -lz" \
       "#include <librdkafka/rdkafka.h>"

    mkl_meta_set "librd" "desc" "librd is available at http://github.com/edenhill/librd."
    mkl_meta_set "librd" "deb" "librdkafka-dev"
    mkl_lib_check --static=-lrd "librd" "" fail CC "-lrd -lrt -lz" \
       "#include <librd/rd.h>"

    mkl_lib_check --static=-lm "libmath" "" fail CC "-lm" \
       "#include <math.h>"

    mkl_lib_check --static=-lmatheval "libmatheval" "" fail CC "-lmatheval" \
       "#include <matheval.h>"

    check_snmp "net_snmp" -lsnmp "cont"
    if [[ "x$HAVE_NET_SNMP" != "xy" ]]; then
        # Centos >6
        check_snmp "net_snmp" -lnetsnmp "fail"
    fi

    # Optionals libs
    mkl_meta_set "zookeeper" "desc" "Zookeeper development libraries"
    mkl_meta_set "zookeeper" "deb" "libzookeeper-mt-dev"
    if [ "x$WITH_ZOOKEEPER" == "xy" ]; then
        mkl_lib_check "zookeeper" HAVE_ZOOKEEPER fail CC "-lzookeeper_mt" \
            "#include <zookeeper/zookeeper.h>"
        mkl_define_set "Zookeeper Support" "HAVE_ZOOKEEPER" "1"
    fi

    if [ "x$WITH_RBHTTP" == "xy" ]; then
        mkl_lib_check "rbhttp" HAVE_RBHTTP fail CC "-lrbhttp -lrd" \
            "#include <librbhttp/rb_http_handler.h>"
        mkl_define_set "HTTP Support" "HAVE_RBHTTP" "1"
    fi

    # Enable assertions if we compile with no optimizations and we are not doing
    # coverage testing
    if [[ "x$WITHOUT_OPTIMIZATION" != "xy" || "x$WITH_COVERAGE" != "xy" ]]; then
      mkl_mkvar_append CPPFLAGS CPPFLAGS "-DNDEBUG"
    fi

    # Enable coverage tests
    if [[ "x$WITH_COVERAGE" != "xn" ]]; then
      mkl_mkvar_append CPPFLAGS CPPFLAGS "--coverage"
      mkl_mkvar_append LDFLAGS LDFLAGS "--coverage"
    fi
}
